// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: learning.proto

package learning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInfoLessonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *GetInfoLessonsResponse) Reset() {
	*x = GetInfoLessonsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoLessonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoLessonsResponse) ProtoMessage() {}

func (x *GetInfoLessonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoLessonsResponse.ProtoReflect.Descriptor instead.
func (*GetInfoLessonsResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{0}
}

func (x *GetInfoLessonsResponse) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type GetLanguageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetLanguageRequest) Reset() {
	*x = GetLanguageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageRequest) ProtoMessage() {}

func (x *GetLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageRequest) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{1}
}

func (x *GetLanguageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLanguageRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FlagEmogi string `protobuf:"bytes,3,opt,name=flagEmogi,proto3" json:"flagEmogi,omitempty"`
}

func (x *Language) Reset() {
	*x = Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{2}
}

func (x *Language) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Language) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Language) GetFlagEmogi() string {
	if x != nil {
		return x.FlagEmogi
	}
	return ""
}

type GetLanguageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetLanguageResponse) Reset() {
	*x = GetLanguageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageResponse) ProtoMessage() {}

func (x *GetLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageResponse.ProtoReflect.Descriptor instead.
func (*GetLanguageResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{3}
}

func (x *GetLanguageResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type StartLanguageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageName string `protobuf:"bytes,1,opt,name=language_name,json=languageName,proto3" json:"language_name,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	InitalLevel  string `protobuf:"bytes,3,opt,name=initalLevel,proto3" json:"initalLevel,omitempty"`
}

func (x *StartLanguageRequest) Reset() {
	*x = StartLanguageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLanguageRequest) ProtoMessage() {}

func (x *StartLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLanguageRequest.ProtoReflect.Descriptor instead.
func (*StartLanguageRequest) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{4}
}

func (x *StartLanguageRequest) GetLanguageName() string {
	if x != nil {
		return x.LanguageName
	}
	return ""
}

func (x *StartLanguageRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *StartLanguageRequest) GetInitalLevel() string {
	if x != nil {
		return x.InitalLevel
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{5}
}

func (x *Info) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Info) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type StartLanguageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	CurrentLavel string `protobuf:"bytes,2,opt,name=currentLavel,proto3" json:"currentLavel,omitempty"`
	NextLesson   *Info  `protobuf:"bytes,3,opt,name=nextLesson,proto3" json:"nextLesson,omitempty"`
}

func (x *StartLanguageResponse) Reset() {
	*x = StartLanguageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLanguageResponse) ProtoMessage() {}

func (x *StartLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLanguageResponse.ProtoReflect.Descriptor instead.
func (*StartLanguageResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{6}
}

func (x *StartLanguageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartLanguageResponse) GetCurrentLavel() string {
	if x != nil {
		return x.CurrentLavel
	}
	return ""
}

func (x *StartLanguageResponse) GetNextLesson() *Info {
	if x != nil {
		return x.NextLesson
	}
	return nil
}

type Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Level     string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	Completed bool   `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *Lesson) Reset() {
	*x = Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lesson) ProtoMessage() {}

func (x *Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lesson.ProtoReflect.Descriptor instead.
func (*Lesson) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{7}
}

func (x *Lesson) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lesson) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Lesson) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Lesson) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type LessonsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string    `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Lessons  []*Lesson `protobuf:"bytes,2,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *LessonsListResponse) Reset() {
	*x = LessonsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonsListResponse) ProtoMessage() {}

func (x *LessonsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonsListResponse.ProtoReflect.Descriptor instead.
func (*LessonsListResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{8}
}

func (x *LessonsListResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LessonsListResponse) GetLessons() []*Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data *Data  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{9}
}

func (x *Content) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Content) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{10}
}

func (x *Text) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vocabulary []*Vocabulary `protobuf:"bytes,1,rep,name=vocabulary,proto3" json:"vocabulary,omitempty"`
	Text       *Text         `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{11}
}

func (x *Data) GetVocabulary() []*Vocabulary {
	if x != nil {
		return x.Vocabulary
	}
	return nil
}

func (x *Data) GetText() *Text {
	if x != nil {
		return x.Text
	}
	return nil
}

type LessonsInfoRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Lenguage string  `protobuf:"bytes,3,opt,name=lenguage,proto3" json:"lenguage,omitempty"`
	Level    string  `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	Content  *Data   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Type     string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Data     []*Data `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LessonsInfoRepository) Reset() {
	*x = LessonsInfoRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonsInfoRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonsInfoRepository) ProtoMessage() {}

func (x *LessonsInfoRepository) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonsInfoRepository.ProtoReflect.Descriptor instead.
func (*LessonsInfoRepository) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{12}
}

func (x *LessonsInfoRepository) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonsInfoRepository) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonsInfoRepository) GetLenguage() string {
	if x != nil {
		return x.Lenguage
	}
	return ""
}

func (x *LessonsInfoRepository) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LessonsInfoRepository) GetContent() *Data {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *LessonsInfoRepository) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonsInfoRepository) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ComplateLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XpEarned   int32  `protobuf:"varint,2,opt,name=xpEarned,proto3" json:"xpEarned,omitempty"`
	NextLesson *Info  `protobuf:"bytes,3,opt,name=nextLesson,proto3" json:"nextLesson,omitempty"`
}

func (x *ComplateLessonResponse) Reset() {
	*x = ComplateLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplateLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplateLessonResponse) ProtoMessage() {}

func (x *ComplateLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplateLessonResponse.ProtoReflect.Descriptor instead.
func (*ComplateLessonResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{13}
}

func (x *ComplateLessonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ComplateLessonResponse) GetXpEarned() int32 {
	if x != nil {
		return x.XpEarned
	}
	return 0
}

func (x *ComplateLessonResponse) GetNextLesson() *Info {
	if x != nil {
		return x.NextLesson
	}
	return nil
}

type Exercises struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Question      string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	CorrectAnswer string `protobuf:"bytes,4,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"`
}

func (x *Exercises) Reset() {
	*x = Exercises{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exercises) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exercises) ProtoMessage() {}

func (x *Exercises) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exercises.ProtoReflect.Descriptor instead.
func (*Exercises) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{14}
}

func (x *Exercises) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Exercises) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Exercises) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Exercises) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type LanguageExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language  string       `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Exercises []*Exercises `protobuf:"bytes,2,rep,name=exercises,proto3" json:"exercises,omitempty"`
}

func (x *LanguageExerciseResponse) Reset() {
	*x = LanguageExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageExerciseResponse) ProtoMessage() {}

func (x *LanguageExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageExerciseResponse.ProtoReflect.Descriptor instead.
func (*LanguageExerciseResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{15}
}

func (x *LanguageExerciseResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LanguageExerciseResponse) GetExercises() []*Exercises {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type ExerciseAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer     string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	ExerciseId string `protobuf:"bytes,2,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
}

func (x *ExerciseAnswerRequest) Reset() {
	*x = ExerciseAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseAnswerRequest) ProtoMessage() {}

func (x *ExerciseAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseAnswerRequest.ProtoReflect.Descriptor instead.
func (*ExerciseAnswerRequest) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{16}
}

func (x *ExerciseAnswerRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ExerciseAnswerRequest) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

type ExerciseAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correct     bool   `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
	XpEarned    int32  `protobuf:"varint,3,opt,name=xpEarned,proto3" json:"xpEarned,omitempty"`
}

func (x *ExerciseAnswerResponse) Reset() {
	*x = ExerciseAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseAnswerResponse) ProtoMessage() {}

func (x *ExerciseAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseAnswerResponse.ProtoReflect.Descriptor instead.
func (*ExerciseAnswerResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{17}
}

func (x *ExerciseAnswerResponse) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

func (x *ExerciseAnswerResponse) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *ExerciseAnswerResponse) GetXpEarned() int32 {
	if x != nil {
		return x.XpEarned
	}
	return 0
}

type Vocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word            string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Translation     string `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	PartOfSpeech    string `protobuf:"bytes,3,opt,name=partOfSpeech,proto3" json:"partOfSpeech,omitempty"`
	ExampleSentence string `protobuf:"bytes,4,opt,name=exampleSentence,proto3" json:"exampleSentence,omitempty"`
	AudioUrl        string `protobuf:"bytes,5,opt,name=audioUrl,proto3" json:"audioUrl,omitempty"`
}

func (x *Vocabulary) Reset() {
	*x = Vocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vocabulary) ProtoMessage() {}

func (x *Vocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vocabulary.ProtoReflect.Descriptor instead.
func (*Vocabulary) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{18}
}

func (x *Vocabulary) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Vocabulary) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *Vocabulary) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *Vocabulary) GetExampleSentence() string {
	if x != nil {
		return x.ExampleSentence
	}
	return ""
}

func (x *Vocabulary) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

type SlcVocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vocabularys []*Vocabulary `protobuf:"bytes,1,rep,name=Vocabularys,proto3" json:"Vocabularys,omitempty"`
}

func (x *SlcVocabulary) Reset() {
	*x = SlcVocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlcVocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlcVocabulary) ProtoMessage() {}

func (x *SlcVocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlcVocabulary.ProtoReflect.Descriptor instead.
func (*SlcVocabulary) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{19}
}

func (x *SlcVocabulary) GetVocabularys() []*Vocabulary {
	if x != nil {
		return x.Vocabularys
	}
	return nil
}

type VocabularyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string        `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Vocabulary []*Vocabulary `protobuf:"bytes,2,rep,name=vocabulary,proto3" json:"vocabulary,omitempty"`
}

func (x *VocabularyListResponse) Reset() {
	*x = VocabularyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyListResponse) ProtoMessage() {}

func (x *VocabularyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyListResponse.ProtoReflect.Descriptor instead.
func (*VocabularyListResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{20}
}

func (x *VocabularyListResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *VocabularyListResponse) GetVocabulary() []*Vocabulary {
	if x != nil {
		return x.Vocabulary
	}
	return nil
}

type AddVocabularyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word            string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Translation     string `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	PartOfSpeech    string `protobuf:"bytes,3,opt,name=partOfSpeech,proto3" json:"partOfSpeech,omitempty"`
	ExampleSentence string `protobuf:"bytes,4,opt,name=exampleSentence,proto3" json:"exampleSentence,omitempty"`
	Languagecode    string `protobuf:"bytes,5,opt,name=languagecode,proto3" json:"languagecode,omitempty"`
}

func (x *AddVocabularyRequest) Reset() {
	*x = AddVocabularyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVocabularyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVocabularyRequest) ProtoMessage() {}

func (x *AddVocabularyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVocabularyRequest.ProtoReflect.Descriptor instead.
func (*AddVocabularyRequest) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{21}
}

func (x *AddVocabularyRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *AddVocabularyRequest) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *AddVocabularyRequest) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *AddVocabularyRequest) GetExampleSentence() string {
	if x != nil {
		return x.ExampleSentence
	}
	return ""
}

func (x *AddVocabularyRequest) GetLanguagecode() string {
	if x != nil {
		return x.Languagecode
	}
	return ""
}

type AddVocabularyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	WordId  string `protobuf:"bytes,2,opt,name=wordId,proto3" json:"wordId,omitempty"`
}

func (x *AddVocabularyResponse) Reset() {
	*x = AddVocabularyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVocabularyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVocabularyResponse) ProtoMessage() {}

func (x *AddVocabularyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVocabularyResponse.ProtoReflect.Descriptor instead.
func (*AddVocabularyResponse) Descriptor() ([]byte, []int) {
	return file_learning_proto_rawDescGZIP(), []int{22}
}

func (x *AddVocabularyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddVocabularyResponse) GetWordId() string {
	if x != nil {
		return x.WordId
	}
	return ""
}

var File_learning_proto protoreflect.FileDescriptor

var file_learning_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x50, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x45, 0x6d, 0x6f,
	0x67, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x45, 0x6d,
	0x6f, 0x67, 0x69, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a,
	0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x60,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xd1, 0x01, 0x0a, 0x15, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x70, 0x45, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x78, 0x70, 0x45, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x18, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x31, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x73, 0x22, 0x50, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x70,
	0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x78, 0x70,
	0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12,
	0x28, 0x0a, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x47, 0x0a, 0x0d, 0x53, 0x6c, 0x63, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x52, 0x0b, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x73, 0x22, 0x6a,
	0x0a, 0x16, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x0a,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x32, 0xdd, 0x05, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x1a, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x1a, 0x20, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x22, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x1a, 0x20, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13, 0x5a, 0x11, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_learning_proto_rawDescOnce sync.Once
	file_learning_proto_rawDescData = file_learning_proto_rawDesc
)

func file_learning_proto_rawDescGZIP() []byte {
	file_learning_proto_rawDescOnce.Do(func() {
		file_learning_proto_rawDescData = protoimpl.X.CompressGZIP(file_learning_proto_rawDescData)
	})
	return file_learning_proto_rawDescData
}

var file_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_learning_proto_goTypes = []interface{}{
	(*GetInfoLessonsResponse)(nil),   // 0: learning.GetInfoLessonsResponse
	(*GetLanguageRequest)(nil),       // 1: learning.GetLanguageRequest
	(*Language)(nil),                 // 2: learning.Language
	(*GetLanguageResponse)(nil),      // 3: learning.GetLanguageResponse
	(*StartLanguageRequest)(nil),     // 4: learning.StartLanguageRequest
	(*Info)(nil),                     // 5: learning.Info
	(*StartLanguageResponse)(nil),    // 6: learning.StartLanguageResponse
	(*Lesson)(nil),                   // 7: learning.Lesson
	(*LessonsListResponse)(nil),      // 8: learning.LessonsListResponse
	(*Content)(nil),                  // 9: learning.Content
	(*Text)(nil),                     // 10: learning.Text
	(*Data)(nil),                     // 11: learning.Data
	(*LessonsInfoRepository)(nil),    // 12: learning.LessonsInfoRepository
	(*ComplateLessonResponse)(nil),   // 13: learning.ComplateLessonResponse
	(*Exercises)(nil),                // 14: learning.Exercises
	(*LanguageExerciseResponse)(nil), // 15: learning.LanguageExerciseResponse
	(*ExerciseAnswerRequest)(nil),    // 16: learning.ExerciseAnswerRequest
	(*ExerciseAnswerResponse)(nil),   // 17: learning.ExerciseAnswerResponse
	(*Vocabulary)(nil),               // 18: learning.Vocabulary
	(*SlcVocabulary)(nil),            // 19: learning.SlcVocabulary
	(*VocabularyListResponse)(nil),   // 20: learning.VocabularyListResponse
	(*AddVocabularyRequest)(nil),     // 21: learning.AddVocabularyRequest
	(*AddVocabularyResponse)(nil),    // 22: learning.AddVocabularyResponse
}
var file_learning_proto_depIdxs = []int32{
	2,  // 0: learning.GetLanguageResponse.languages:type_name -> learning.Language
	5,  // 1: learning.StartLanguageResponse.nextLesson:type_name -> learning.Info
	7,  // 2: learning.LessonsListResponse.lessons:type_name -> learning.Lesson
	11, // 3: learning.Content.data:type_name -> learning.Data
	18, // 4: learning.Data.vocabulary:type_name -> learning.Vocabulary
	10, // 5: learning.Data.text:type_name -> learning.Text
	11, // 6: learning.LessonsInfoRepository.content:type_name -> learning.Data
	11, // 7: learning.LessonsInfoRepository.data:type_name -> learning.Data
	5,  // 8: learning.ComplateLessonResponse.nextLesson:type_name -> learning.Info
	14, // 9: learning.LanguageExerciseResponse.exercises:type_name -> learning.Exercises
	18, // 10: learning.SlcVocabulary.Vocabularys:type_name -> learning.Vocabulary
	18, // 11: learning.VocabularyListResponse.vocabulary:type_name -> learning.Vocabulary
	1,  // 12: learning.LearningService.GetLanguages:input_type -> learning.GetLanguageRequest
	4,  // 13: learning.LearningService.StartLearnLanguage:input_type -> learning.StartLanguageRequest
	2,  // 14: learning.LearningService.GetLessonsList:input_type -> learning.Language
	0,  // 15: learning.LearningService.GetInfoLessons:input_type -> learning.GetInfoLessonsResponse
	7,  // 16: learning.LearningService.ComplateLesson:input_type -> learning.Lesson
	2,  // 17: learning.LearningService.GetLanguageExercises:input_type -> learning.Language
	16, // 18: learning.LearningService.SubmitExerciseAnswer:input_type -> learning.ExerciseAnswerRequest
	2,  // 19: learning.LearningService.GetVocabularyList:input_type -> learning.Language
	21, // 20: learning.LearningService.AddVocabulary:input_type -> learning.AddVocabularyRequest
	3,  // 21: learning.LearningService.GetLanguages:output_type -> learning.GetLanguageResponse
	6,  // 22: learning.LearningService.StartLearnLanguage:output_type -> learning.StartLanguageResponse
	8,  // 23: learning.LearningService.GetLessonsList:output_type -> learning.LessonsListResponse
	12, // 24: learning.LearningService.GetInfoLessons:output_type -> learning.LessonsInfoRepository
	13, // 25: learning.LearningService.ComplateLesson:output_type -> learning.ComplateLessonResponse
	15, // 26: learning.LearningService.GetLanguageExercises:output_type -> learning.LanguageExerciseResponse
	17, // 27: learning.LearningService.SubmitExerciseAnswer:output_type -> learning.ExerciseAnswerResponse
	20, // 28: learning.LearningService.GetVocabularyList:output_type -> learning.VocabularyListResponse
	22, // 29: learning.LearningService.AddVocabulary:output_type -> learning.AddVocabularyResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_learning_proto_init() }
func file_learning_proto_init() {
	if File_learning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_learning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoLessonsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLanguageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLanguageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonsInfoRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplateLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exercises); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExerciseAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExerciseAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlcVocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVocabularyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVocabularyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_learning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_learning_proto_goTypes,
		DependencyIndexes: file_learning_proto_depIdxs,
		MessageInfos:      file_learning_proto_msgTypes,
	}.Build()
	File_learning_proto = out.File
	file_learning_proto_rawDesc = nil
	file_learning_proto_goTypes = nil
	file_learning_proto_depIdxs = nil
}
